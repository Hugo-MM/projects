# Generated by Django 3.2.6 on 2021-08-16 15:09

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, null=True)),
                ('last_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Appreciation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appreciation', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, null=True)),
                ('last_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Writer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, null=True)),
                ('last_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='MovieEnthousiast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hash_id', models.IntegerField(unique=True)),
                ('appreciation', models.ManyToManyField(to='MovieReco.Appreciation')),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('imdbid', models.CharField(max_length=20, unique=True)),
                ('imdb_rate', models.DecimalField(decimal_places=1, max_digits=3, null=True)),
                ('year', models.IntegerField(null=True)),
                ('duration', models.IntegerField(default=None, null=True)),
                ('synopsis', models.CharField(default='', max_length=1000)),
                ('actor', models.ManyToManyField(blank=True, to='MovieReco.Actor')),
                ('country', models.ManyToManyField(blank=True, to='MovieReco.Country')),
                ('director', models.ManyToManyField(blank=True, to='MovieReco.Director')),
                ('genre', models.ManyToManyField(blank=True, to='MovieReco.Genre')),
                ('language', models.ManyToManyField(blank=True, to='MovieReco.Language')),
                ('writer', models.ManyToManyField(blank=True, to='MovieReco.Writer')),
            ],
        ),
        migrations.AddField(
            model_name='appreciation',
            name='movie',
            field=models.ManyToManyField(to='MovieReco.Movie'),
        ),
    ]
